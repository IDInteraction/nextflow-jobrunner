#!/usr/bin/env nextflow
/* Run IDInteraction analysis jobs (i.e. classifying from ground truth
and arbitrary sources of tracking data) using Nextflow */
/* August 2017 */

/*
vim: syntax=groovy
-*- mode: groovy;-*-
*/


params.outfile="outfile.csv"
params.sources="openface,cppmt"
params.includeframefortracking=false
params.targetted=false
experimentparts=[1,2]
//trainingframes=[30,60,120,240,450,900,1800]
trainingframes = [30]
shuffleoptions=["","no"]
//participantrange = 1..20 // Want to detect automatically (pass as environment var?)
participantrange = 1..2
participantcode = participantrange.collect{"P" + String.valueOf(it).padLeft(2,'0')}
participants=Channel.from(participantcode) 



process runClassifier {
	echo true
	// Run the classifier for a participant/experimentpart combination
	input:
	val participant from participants
	each experimentpart from experimentparts
	each trainingframe from trainingframes
	each shuffle from shuffleoptions

	output:
	// We need each output filename to be unique. 
	// We do this by getting the directory name we run in in the 
	// shell script
	
	file "result*.csv" into classres

	exec:
	sources = ["cppmt":"/idinteraction/results/cppMT/part${experimentpart}/${participant}_front.csv",
	"pca":"/idinteraction/results/depth/${participant}.pca${experimentpart}",
	"mixture":"/idinteraction/results/depth/${participant}.mixture${experimentpart}",
	"openface":"/idinteraction/results/OpenFace/${participant}_front.openface"]

	// Derive the string we need to pass as --tracker parameters
	sourcelist = params.sources.tokenize(",")
	String sourcestring = ""
	for (String s : sourcelist){
		thissource = sources[s]
		if (!thissource){
			throw new IOException("No frame source " + thissource)
		}
		sourcestring += ("--tracker " + thissource + " ")
	}

	includeframefortracking = " "
	if (params.includeframefortracking){
		includeframefortracking = "--includeframefortracking"
	}

	targetted = " "
	if(params.targetted){
		targetted = "--targetted --windowsize 1000 --advancesize 500 --batchsize 50"
	}

	groundtruth = "/idinteraction/results/Groundtruth/${participant}_attention.csv"

	startstring = "start" + "$experimentpart"
	endstring = "end" + "$experimentpart"
	shell:
	// ${PWD##*/} gets the last part of the current directory
	"""
	abc-classify.py --outfile=result\${PWD##*/}.csv  ${sourcestring} --startframestring ${startstring} --endframestring=${endstring} --${shuffle}shuffle ${includeframefortracking} ${targetted} --workdir ${workflow.launchDir}
	"""
}

process produceOutput {
	// Combine the results of each individual run

	publishDir "data/runresults", mode:"copy" , overwrite:"false"

	input:
	file classreslist from classres.collect()

	output:
	file 'runresults.txt' 

	script:
	"""
	for resfile in ${classreslist}
	do
		cat \$resfile >> runresults.txt
	done
	"""
}
