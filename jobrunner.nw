#!/usr/bin/env nextflow
/* Run IDInteraction analysis jobs (i.e. classifying from ground truth
and arbitrary sources of tracking data) using Nextflow */
/* August 2017 */

/*
vim: syntax=groovy
-*- mode: groovy;-*-
*/


params.outfile="outfile.csv"

experimentparts=[1,2]
trainingframes=[30,60,120,240,450,900,1800]
shuffleoptions=["","no"]
participantrange = 1..20
participantcode = participantrange.collect{"P" + String.valueOf(it).padLeft(2,'0')}
participants=Channel.from(participantcode) // Want to detect automatically

openfacesource = ["openface/", "xx", "_front.openface"]

groundtruthsource = "attention/xx_groundtruth.csv"



process runClassifier {

	// Run the classifier for a participant/experimentpart combination
	input:
	val participant from participants
	each experimentpart from experimentparts
	each trainingframe from trainingframes
	each shuffle from shuffleoptions

	output:
	file "result${participant}_${experimentpart}_${trainingframe}_${shuffle}.txt" into classres

	exec:
	openface = openfacesource[0] + "$participant" + openfacesource[2]
	// Include strings for other data sources in here
	startstring = "start" + "$experimentpart"
	endstring = "end" + "$experimentpart"

	shell:
	// provide a comma separated list of tracking source data to the
	// --tracker option
	"""
	abc-classify.py --outfile=result${participant}_${experimentpart}_${trainingframe}_${shuffle}.txt  --tracker ${openface} --startframestring ${startstring} --endframestring=${endstring} --${shuffle}shuffle
	"""
}

process produceOutput {
	// Combine the results of each individual run
	input:
	file classreslist from classres.collect()

	output:
	file 'runresults.txt' 

	script:
	"""
	for resfile in ${classreslist}
	do
		cat \$resfile >> runresults.txt
	done
	"""
}
